"""
Created on Mon Jun  1 18:59:38 2020

@author: Shahadat Hossain, 3847363
"""


import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.dates as mdates
import os
import seaborn as sn

#Loading csv file

os.chdir('/media/shihsir/HDD/Courses/Microclimates')
df = pd.read_csv('Ex04.data.csv', sep=";" , header = 0, parse_dates= [0], index_col=0, na_values= -999)
dfTm = df[['Tmax','Tmin']].resample('M').mean()
dfRRsum = df['RR'].resample('M').sum()


#Winter season filtering. I selected Oct Nov Dec as winter. Fell free to modify months.

dfwinter = df['1981':'2010']
dfm = df['1981':'2017'].resample('M').mean()
tab = dfm.reset_index()
tab['month']= tab['Date'].dt.month
dfmJJA = tab.query('month==10 or month==11 or month==12') 
dfmJJA = dfmJJA.set_index('Date')
dfmJJA.drop('month',axis=1, inplace=True)


#Anomalies calculation
rrano = dfmJJA.RR - dfwinter.RR.mean()
tano = dfmJJA[['Tmax', 'Tmin']] - dfwinter[['Tmax', 'Tmin']].mean()

month = ('Oct', 'Nov', 'Dec')
dfsrc=dfmJJA.iloc[:,0:3]
dfsrc2 = tano.iloc[:,0:2]


#Group formation. As visualization is needed to be monthly basis.

dfJmean = dfsrc.groupby([pd.DatetimeIndex(dfsrc.index).month]).mean().round(1)
rranomnth = rrano.groupby([pd.DatetimeIndex(rrano.index).month]).mean().round(1)
tanomnth = dfsrc2.groupby([pd.DatetimeIndex(dfsrc2.index).month]).mean().round(1)

ranomnth =rranomnth.to_frame()
mon = ['Oct', 'Nov', 'Dec']


#Plot consisting of 4 subplots

fig, ax = plt.subplots(2,2, figsize=(8,6))

ax[0,0].plot(dfJmean.index, dfJmean.RR, color='royalblue')
ax[0,0].set_ylabel('mm/month')
ax[0,0].set_xticks(dfJmean.index)
ax[0,0].set_xticklabels(mon)
ax[0,0].set_yticks([1,2,3,4,5])
ax[0,0].set_title('Monthly Precipitation')
plt.tight_layout()

ax[0,1].plot(ranomnth.index, ranomnth.RR, color='yellow')
ax[0,1].set_ylabel('mm/month')
ax[0,1].set_xticks(ranomnth.index)
ax[0,1].set_xticklabels(mon)
ax[0,1].set_yticks([-0.5, -0.25, 0, 0.25, 0.5])
ax[0,1].set_title('Monthly Precipitation Anomalies')
plt.tight_layout()

ax[1,0].plot(dfJmean.index, dfJmean.Tmin, color='g')
ax[1,0].plot(dfJmean.index, dfJmean.Tmax, color='y')
ax[1,0].set_title('Monthly Mean Temp')
ax[1,0].set_xticks(dfJmean.index)
ax[1,0].set_xticklabels(mon)
ax[1,0].set_ylabel('C')
ax[1,0].legend(['Tmin', 'Tmax'])
plt.tight_layout()

ax[1,1].plot(tanomnth.index, tanomnth.Tmin, color='b')
ax[1,1].plot(tanomnth.index, tanomnth.Tmax, color='y')
ax[1,1].set_title('Monthly Anomalies in Temp')
ax[1,1].set_xticks(tanomnth.index)
ax[1,1].set_xticklabels(mon)
ax[1,1].set_ylabel('C')
ax[1,1].legend(['Tmin', 'Tmax'])
plt.tight_layout()


#Correlation coefficient

corr = dfJmean.corr()
sn.heatmap(corr, annot=True)
plt.show()

"""
From the correlation  plot, it is obvious that, precipitation is very highly negative correlated with temperature.
So when precipiation increases temperature decreses & temperature increases precipitation decreases. 

Well as per definition of corr, neither Pearson nor Rank corr cofficient depicts the cause and result phenomenon. It is
not likely that Temperature causes Rainfall or vice versa. It is more likely that when one increases another decreases and 
vice versa. Thats what corr cofficient tells us as per statistical point of view.

"""
